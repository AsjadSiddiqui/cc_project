Terminals which are not used

   tok_and
   tok_or
   tok_not


State 5 conflicts: 2 shift/reduce
State 9 conflicts: 1 shift/reduce
State 16 conflicts: 10 reduce/reduce
State 37 conflicts: 1 shift/reduce
State 38 conflicts: 1 shift/reduce
State 44 conflicts: 1 shift/reduce
State 45 conflicts: 1 shift/reduce
State 46 conflicts: 1 shift/reduce
State 57 conflicts: 10 reduce/reduce
State 59 conflicts: 10 reduce/reduce
State 83 conflicts: 1 shift/reduce
State 84 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: /* empty */
    2        | statement program

    3 statement: declaration
    4          | output
    5          | loop
    6          | conditional
    7          | special_token

    8 declaration: tok_var tok_string tok_multiply
    9            | tok_var tok_integer tok_multiply
   10            | tok_var tok_float tok_multiply
   11            | tok_var tok_boolean tok_multiply
   12            | tok_var tok_integer tok_multiply tok_int_literal
   13            | tok_var tok_integer tok_multiply tok_plus_print tok_multiply tok_multiply
   14            | tok_var tok_integer tok_multiply expression
   15            | tok_var tok_float tok_multiply tok_float_literal
   16            | tok_var tok_float tok_multiply expression
   17            | assignment

   18 assignment: tok_identifier tok_multiply expression
   19           | tok_multiply tok_increment

   20 output: tok_plus_print term
   21       | tok_plus_print tok_string_literal
   22       | tok_plus_print tok_multiply

   23 loop: tok_for_start tok_in tok_range tok_int_literal tok_loop_start program tok_loop_end

   24 conditional: tok_if condition tok_loop_start program tok_if_end
   25            | tok_if condition tok_loop_start program tok_else tok_loop_start program tok_if_end
   26            | tok_if compare_anon_vars tok_loop_start program tok_if_end
   27            | tok_if compare_anon_const tok_loop_start program tok_if_end
   28            | tok_if compare_anon_const tok_loop_start program tok_else tok_loop_start program tok_if_end

   29 compare_anon_vars: tok_multiply tok_greater_than tok_multiply

   30 compare_anon_const: tok_multiply tok_equal tok_int_literal

   31 condition: expression tok_equal expression
   32          | expression tok_less_than expression
   33          | expression tok_greater_than expression

   34 term: tok_identifier
   35     | tok_int_literal
   36     | tok_float_literal
   37     | tok_multiply

   38 expression: term
   39           | expression tok_plus_print expression
   40           | expression tok_minus expression
   41           | expression tok_multiply expression
   42           | expression tok_divide expression

   43 special_token: tok_if_end
   44              | tok_if


Terminals, with rules where they appear

$end (0) 0
error (256)
tok_integer (258) 9 12 13 14
tok_float (259) 10 15 16
tok_boolean (260) 11
tok_string (261) 8
tok_plus_print (262) 13 20 21 22 39
tok_minus (263) 40
tok_multiply (264) 8 9 10 11 12 13 14 15 16 18 19 22 29 30 37 41
tok_divide (265) 42
tok_and (266)
tok_or (267)
tok_not (268)
tok_var (269) 8 9 10 11 12 13 14 15 16
tok_for_start (270) 23
tok_in (271) 23
tok_range (272) 23
tok_loop_start (273) 23 24 25 26 27 28
tok_loop_end (274) 23
tok_if (275) 24 25 26 27 28 44
tok_else (276) 25 28
tok_if_end (277) 24 25 26 27 28 43
tok_equal (278) 30 31
tok_less_than (279) 32
tok_greater_than (280) 29 33
tok_increment (281) 19
tok_identifier (282) 18 34
tok_int_literal (283) 12 23 30 35
tok_float_literal (284) 15 36
tok_string_literal (285) 21


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
program (32)
    on left: 1 2, on right: 0 2 23 24 25 26 27 28
statement (33)
    on left: 3 4 5 6 7, on right: 2
declaration (34)
    on left: 8 9 10 11 12 13 14 15 16 17, on right: 3
assignment (35)
    on left: 18 19, on right: 17
output (36)
    on left: 20 21 22, on right: 4
loop (37)
    on left: 23, on right: 5
conditional (38)
    on left: 24 25 26 27 28, on right: 6
compare_anon_vars (39)
    on left: 29, on right: 26
compare_anon_const (40)
    on left: 30, on right: 27 28
condition (41)
    on left: 31 32 33, on right: 24 25
term (42)
    on left: 34 35 36 37, on right: 20 38
expression (43)
    on left: 38 39 40 41 42, on right: 14 16 18 31 32 33 39 40 41 42
special_token (44)
    on left: 43 44, on right: 7


state 0

    0 $accept: . program $end

    tok_plus_print  shift, and go to state 1
    tok_multiply    shift, and go to state 2
    tok_var         shift, and go to state 3
    tok_for_start   shift, and go to state 4
    tok_if          shift, and go to state 5
    tok_if_end      shift, and go to state 6
    tok_identifier  shift, and go to state 7

    $default  reduce using rule 1 (program)

    program        go to state 8
    statement      go to state 9
    declaration    go to state 10
    assignment     go to state 11
    output         go to state 12
    loop           go to state 13
    conditional    go to state 14
    special_token  go to state 15


state 1

   20 output: tok_plus_print . term
   21       | tok_plus_print . tok_string_literal
   22       | tok_plus_print . tok_multiply

    tok_multiply        shift, and go to state 16
    tok_identifier      shift, and go to state 17
    tok_int_literal     shift, and go to state 18
    tok_float_literal   shift, and go to state 19
    tok_string_literal  shift, and go to state 20

    term  go to state 21


state 2

   19 assignment: tok_multiply . tok_increment

    tok_increment  shift, and go to state 22


state 3

    8 declaration: tok_var . tok_string tok_multiply
    9            | tok_var . tok_integer tok_multiply
   10            | tok_var . tok_float tok_multiply
   11            | tok_var . tok_boolean tok_multiply
   12            | tok_var . tok_integer tok_multiply tok_int_literal
   13            | tok_var . tok_integer tok_multiply tok_plus_print tok_multiply tok_multiply
   14            | tok_var . tok_integer tok_multiply expression
   15            | tok_var . tok_float tok_multiply tok_float_literal
   16            | tok_var . tok_float tok_multiply expression

    tok_integer  shift, and go to state 23
    tok_float    shift, and go to state 24
    tok_boolean  shift, and go to state 25
    tok_string   shift, and go to state 26


state 4

   23 loop: tok_for_start . tok_in tok_range tok_int_literal tok_loop_start program tok_loop_end

    tok_in  shift, and go to state 27


state 5

   24 conditional: tok_if . condition tok_loop_start program tok_if_end
   25            | tok_if . condition tok_loop_start program tok_else tok_loop_start program tok_if_end
   26            | tok_if . compare_anon_vars tok_loop_start program tok_if_end
   27            | tok_if . compare_anon_const tok_loop_start program tok_if_end
   28            | tok_if . compare_anon_const tok_loop_start program tok_else tok_loop_start program tok_if_end
   44 special_token: tok_if .

    tok_multiply       shift, and go to state 28
    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 18
    tok_float_literal  shift, and go to state 19

    tok_multiply    [reduce using rule 44 (special_token)]
    tok_identifier  [reduce using rule 44 (special_token)]
    $default        reduce using rule 44 (special_token)

    compare_anon_vars   go to state 29
    compare_anon_const  go to state 30
    condition           go to state 31
    term                go to state 32
    expression          go to state 33


state 6

   43 special_token: tok_if_end .

    $default  reduce using rule 43 (special_token)


state 7

   18 assignment: tok_identifier . tok_multiply expression

    tok_multiply  shift, and go to state 34


state 8

    0 $accept: program . $end

    $end  shift, and go to state 35


state 9

    2 program: statement . program

    tok_plus_print  shift, and go to state 1
    tok_multiply    shift, and go to state 2
    tok_var         shift, and go to state 3
    tok_for_start   shift, and go to state 4
    tok_if          shift, and go to state 5
    tok_if_end      shift, and go to state 6
    tok_identifier  shift, and go to state 7

    tok_if_end  [reduce using rule 1 (program)]
    $default    reduce using rule 1 (program)

    program        go to state 36
    statement      go to state 9
    declaration    go to state 10
    assignment     go to state 11
    output         go to state 12
    loop           go to state 13
    conditional    go to state 14
    special_token  go to state 15


state 10

    3 statement: declaration .

    $default  reduce using rule 3 (statement)


state 11

   17 declaration: assignment .

    $default  reduce using rule 17 (declaration)


state 12

    4 statement: output .

    $default  reduce using rule 4 (statement)


state 13

    5 statement: loop .

    $default  reduce using rule 5 (statement)


state 14

    6 statement: conditional .

    $default  reduce using rule 6 (statement)


state 15

    7 statement: special_token .

    $default  reduce using rule 7 (statement)


state 16

   22 output: tok_plus_print tok_multiply .
   37 term: tok_multiply .

    $end            reduce using rule 22 (output)
    $end            [reduce using rule 37 (term)]
    tok_plus_print  reduce using rule 22 (output)
    tok_plus_print  [reduce using rule 37 (term)]
    tok_multiply    reduce using rule 22 (output)
    tok_multiply    [reduce using rule 37 (term)]
    tok_var         reduce using rule 22 (output)
    tok_var         [reduce using rule 37 (term)]
    tok_for_start   reduce using rule 22 (output)
    tok_for_start   [reduce using rule 37 (term)]
    tok_loop_end    reduce using rule 22 (output)
    tok_loop_end    [reduce using rule 37 (term)]
    tok_if          reduce using rule 22 (output)
    tok_if          [reduce using rule 37 (term)]
    tok_else        reduce using rule 22 (output)
    tok_else        [reduce using rule 37 (term)]
    tok_if_end      reduce using rule 22 (output)
    tok_if_end      [reduce using rule 37 (term)]
    tok_identifier  reduce using rule 22 (output)
    tok_identifier  [reduce using rule 37 (term)]
    $default        reduce using rule 22 (output)


state 17

   34 term: tok_identifier .

    $default  reduce using rule 34 (term)


state 18

   35 term: tok_int_literal .

    $default  reduce using rule 35 (term)


state 19

   36 term: tok_float_literal .

    $default  reduce using rule 36 (term)


state 20

   21 output: tok_plus_print tok_string_literal .

    $default  reduce using rule 21 (output)


state 21

   20 output: tok_plus_print term .

    $default  reduce using rule 20 (output)


state 22

   19 assignment: tok_multiply tok_increment .

    $default  reduce using rule 19 (assignment)


state 23

    9 declaration: tok_var tok_integer . tok_multiply
   12            | tok_var tok_integer . tok_multiply tok_int_literal
   13            | tok_var tok_integer . tok_multiply tok_plus_print tok_multiply tok_multiply
   14            | tok_var tok_integer . tok_multiply expression

    tok_multiply  shift, and go to state 37


state 24

   10 declaration: tok_var tok_float . tok_multiply
   15            | tok_var tok_float . tok_multiply tok_float_literal
   16            | tok_var tok_float . tok_multiply expression

    tok_multiply  shift, and go to state 38


state 25

   11 declaration: tok_var tok_boolean . tok_multiply

    tok_multiply  shift, and go to state 39


state 26

    8 declaration: tok_var tok_string . tok_multiply

    tok_multiply  shift, and go to state 40


state 27

   23 loop: tok_for_start tok_in . tok_range tok_int_literal tok_loop_start program tok_loop_end

    tok_range  shift, and go to state 41


state 28

   29 compare_anon_vars: tok_multiply . tok_greater_than tok_multiply
   30 compare_anon_const: tok_multiply . tok_equal tok_int_literal
   37 term: tok_multiply .

    tok_equal         shift, and go to state 42
    tok_greater_than  shift, and go to state 43

    $default  reduce using rule 37 (term)


state 29

   26 conditional: tok_if compare_anon_vars . tok_loop_start program tok_if_end

    tok_loop_start  shift, and go to state 44


state 30

   27 conditional: tok_if compare_anon_const . tok_loop_start program tok_if_end
   28            | tok_if compare_anon_const . tok_loop_start program tok_else tok_loop_start program tok_if_end

    tok_loop_start  shift, and go to state 45


state 31

   24 conditional: tok_if condition . tok_loop_start program tok_if_end
   25            | tok_if condition . tok_loop_start program tok_else tok_loop_start program tok_if_end

    tok_loop_start  shift, and go to state 46


state 32

   38 expression: term .

    $default  reduce using rule 38 (expression)


state 33

   31 condition: expression . tok_equal expression
   32          | expression . tok_less_than expression
   33          | expression . tok_greater_than expression
   39 expression: expression . tok_plus_print expression
   40           | expression . tok_minus expression
   41           | expression . tok_multiply expression
   42           | expression . tok_divide expression

    tok_plus_print    shift, and go to state 47
    tok_minus         shift, and go to state 48
    tok_multiply      shift, and go to state 49
    tok_divide        shift, and go to state 50
    tok_equal         shift, and go to state 51
    tok_less_than     shift, and go to state 52
    tok_greater_than  shift, and go to state 53


state 34

   18 assignment: tok_identifier tok_multiply . expression

    tok_multiply       shift, and go to state 54
    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 18
    tok_float_literal  shift, and go to state 19

    term        go to state 32
    expression  go to state 55


state 35

    0 $accept: program $end .

    $default  accept


state 36

    2 program: statement program .

    $default  reduce using rule 2 (program)


state 37

    9 declaration: tok_var tok_integer tok_multiply .
   12            | tok_var tok_integer tok_multiply . tok_int_literal
   13            | tok_var tok_integer tok_multiply . tok_plus_print tok_multiply tok_multiply
   14            | tok_var tok_integer tok_multiply . expression

    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 57
    tok_float_literal  shift, and go to state 19

    tok_identifier  [reduce using rule 9 (declaration)]
    $default        reduce using rule 9 (declaration)

    term        go to state 32
    expression  go to state 58


state 38

   10 declaration: tok_var tok_float tok_multiply .
   15            | tok_var tok_float tok_multiply . tok_float_literal
   16            | tok_var tok_float tok_multiply . expression

    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 18
    tok_float_literal  shift, and go to state 59

    tok_identifier  [reduce using rule 10 (declaration)]
    $default        reduce using rule 10 (declaration)

    term        go to state 32
    expression  go to state 60


state 39

   11 declaration: tok_var tok_boolean tok_multiply .

    $default  reduce using rule 11 (declaration)


state 40

    8 declaration: tok_var tok_string tok_multiply .

    $default  reduce using rule 8 (declaration)


state 41

   23 loop: tok_for_start tok_in tok_range . tok_int_literal tok_loop_start program tok_loop_end

    tok_int_literal  shift, and go to state 61


state 42

   30 compare_anon_const: tok_multiply tok_equal . tok_int_literal

    tok_int_literal  shift, and go to state 62


state 43

   29 compare_anon_vars: tok_multiply tok_greater_than . tok_multiply

    tok_multiply  shift, and go to state 63


state 44

   26 conditional: tok_if compare_anon_vars tok_loop_start . program tok_if_end

    tok_plus_print  shift, and go to state 1
    tok_multiply    shift, and go to state 2
    tok_var         shift, and go to state 3
    tok_for_start   shift, and go to state 4
    tok_if          shift, and go to state 5
    tok_if_end      shift, and go to state 6
    tok_identifier  shift, and go to state 7

    tok_if_end  [reduce using rule 1 (program)]

    program        go to state 64
    statement      go to state 9
    declaration    go to state 10
    assignment     go to state 11
    output         go to state 12
    loop           go to state 13
    conditional    go to state 14
    special_token  go to state 15


state 45

   27 conditional: tok_if compare_anon_const tok_loop_start . program tok_if_end
   28            | tok_if compare_anon_const tok_loop_start . program tok_else tok_loop_start program tok_if_end

    tok_plus_print  shift, and go to state 1
    tok_multiply    shift, and go to state 2
    tok_var         shift, and go to state 3
    tok_for_start   shift, and go to state 4
    tok_if          shift, and go to state 5
    tok_if_end      shift, and go to state 6
    tok_identifier  shift, and go to state 7

    tok_if_end  [reduce using rule 1 (program)]
    $default    reduce using rule 1 (program)

    program        go to state 65
    statement      go to state 9
    declaration    go to state 10
    assignment     go to state 11
    output         go to state 12
    loop           go to state 13
    conditional    go to state 14
    special_token  go to state 15


state 46

   24 conditional: tok_if condition tok_loop_start . program tok_if_end
   25            | tok_if condition tok_loop_start . program tok_else tok_loop_start program tok_if_end

    tok_plus_print  shift, and go to state 1
    tok_multiply    shift, and go to state 2
    tok_var         shift, and go to state 3
    tok_for_start   shift, and go to state 4
    tok_if          shift, and go to state 5
    tok_if_end      shift, and go to state 6
    tok_identifier  shift, and go to state 7

    tok_if_end  [reduce using rule 1 (program)]
    $default    reduce using rule 1 (program)

    program        go to state 66
    statement      go to state 9
    declaration    go to state 10
    assignment     go to state 11
    output         go to state 12
    loop           go to state 13
    conditional    go to state 14
    special_token  go to state 15


state 47

   39 expression: expression tok_plus_print . expression

    tok_multiply       shift, and go to state 54
    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 18
    tok_float_literal  shift, and go to state 19

    term        go to state 32
    expression  go to state 67


state 48

   40 expression: expression tok_minus . expression

    tok_multiply       shift, and go to state 54
    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 18
    tok_float_literal  shift, and go to state 19

    term        go to state 32
    expression  go to state 68


state 49

   41 expression: expression tok_multiply . expression

    tok_multiply       shift, and go to state 54
    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 18
    tok_float_literal  shift, and go to state 19

    term        go to state 32
    expression  go to state 69


state 50

   42 expression: expression tok_divide . expression

    tok_multiply       shift, and go to state 54
    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 18
    tok_float_literal  shift, and go to state 19

    term        go to state 32
    expression  go to state 70


state 51

   31 condition: expression tok_equal . expression

    tok_multiply       shift, and go to state 54
    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 18
    tok_float_literal  shift, and go to state 19

    term        go to state 32
    expression  go to state 71


state 52

   32 condition: expression tok_less_than . expression

    tok_multiply       shift, and go to state 54
    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 18
    tok_float_literal  shift, and go to state 19

    term        go to state 32
    expression  go to state 72


state 53

   33 condition: expression tok_greater_than . expression

    tok_multiply       shift, and go to state 54
    tok_identifier     shift, and go to state 17
    tok_int_literal    shift, and go to state 18
    tok_float_literal  shift, and go to state 19

    term        go to state 32
    expression  go to state 73


state 54

   37 term: tok_multiply .

    $default  reduce using rule 37 (term)


state 55

   18 assignment: tok_identifier tok_multiply expression .
   39 expression: expression . tok_plus_print expression
   40           | expression . tok_minus expression
   41           | expression . tok_multiply expression
   42           | expression . tok_divide expression

    tok_minus   shift, and go to state 48
    tok_divide  shift, and go to state 50

    $default  reduce using rule 18 (assignment)


state 56

   13 declaration: tok_var tok_integer tok_multiply tok_plus_print . tok_multiply tok_multiply

    tok_multiply  shift, and go to state 74


state 57

   12 declaration: tok_var tok_integer tok_multiply tok_int_literal .
   35 term: tok_int_literal .

    $end            reduce using rule 12 (declaration)
    $end            [reduce using rule 35 (term)]
    tok_plus_print  reduce using rule 12 (declaration)
    tok_plus_print  [reduce using rule 35 (term)]
    tok_minus       reduce using rule 35 (term)
    tok_multiply    reduce using rule 12 (declaration)
    tok_multiply    [reduce using rule 35 (term)]
    tok_divide      reduce using rule 35 (term)
    tok_var         reduce using rule 12 (declaration)
    tok_var         [reduce using rule 35 (term)]
    tok_for_start   reduce using rule 12 (declaration)
    tok_for_start   [reduce using rule 35 (term)]
    tok_loop_end    reduce using rule 12 (declaration)
    tok_loop_end    [reduce using rule 35 (term)]
    tok_if          reduce using rule 12 (declaration)
    tok_if          [reduce using rule 35 (term)]
    tok_else        reduce using rule 12 (declaration)
    tok_else        [reduce using rule 35 (term)]
    tok_if_end      reduce using rule 12 (declaration)
    tok_if_end      [reduce using rule 35 (term)]
    tok_identifier  reduce using rule 12 (declaration)
    tok_identifier  [reduce using rule 35 (term)]
    $default        reduce using rule 12 (declaration)


state 58

   14 declaration: tok_var tok_integer tok_multiply expression .
   39 expression: expression . tok_plus_print expression
   40           | expression . tok_minus expression
   41           | expression . tok_multiply expression
   42           | expression . tok_divide expression

    tok_minus   shift, and go to state 48
    tok_divide  shift, and go to state 50

    $default  reduce using rule 14 (declaration)


state 59

   15 declaration: tok_var tok_float tok_multiply tok_float_literal .
   36 term: tok_float_literal .

    $end            reduce using rule 15 (declaration)
    $end            [reduce using rule 36 (term)]
    tok_plus_print  reduce using rule 15 (declaration)
    tok_plus_print  [reduce using rule 36 (term)]
    tok_minus       reduce using rule 36 (term)
    tok_multiply    reduce using rule 15 (declaration)
    tok_multiply    [reduce using rule 36 (term)]
    tok_divide      reduce using rule 36 (term)
    tok_var         reduce using rule 15 (declaration)
    tok_var         [reduce using rule 36 (term)]
    tok_for_start   reduce using rule 15 (declaration)
    tok_for_start   [reduce using rule 36 (term)]
    tok_loop_end    reduce using rule 15 (declaration)
    tok_loop_end    [reduce using rule 36 (term)]
    tok_if          reduce using rule 15 (declaration)
    tok_if          [reduce using rule 36 (term)]
    tok_else        reduce using rule 15 (declaration)
    tok_else        [reduce using rule 36 (term)]
    tok_if_end      reduce using rule 15 (declaration)
    tok_if_end      [reduce using rule 36 (term)]
    tok_identifier  reduce using rule 15 (declaration)
    tok_identifier  [reduce using rule 36 (term)]
    $default        reduce using rule 15 (declaration)


state 60

   16 declaration: tok_var tok_float tok_multiply expression .
   39 expression: expression . tok_plus_print expression
   40           | expression . tok_minus expression
   41           | expression . tok_multiply expression
   42           | expression . tok_divide expression

    tok_minus   shift, and go to state 48
    tok_divide  shift, and go to state 50

    $default  reduce using rule 16 (declaration)


state 61

   23 loop: tok_for_start tok_in tok_range tok_int_literal . tok_loop_start program tok_loop_end

    tok_loop_start  shift, and go to state 75


state 62

   30 compare_anon_const: tok_multiply tok_equal tok_int_literal .

    $default  reduce using rule 30 (compare_anon_const)


state 63

   29 compare_anon_vars: tok_multiply tok_greater_than tok_multiply .

    $default  reduce using rule 29 (compare_anon_vars)


state 64

   26 conditional: tok_if compare_anon_vars tok_loop_start program . tok_if_end

    tok_if_end  shift, and go to state 76


state 65

   27 conditional: tok_if compare_anon_const tok_loop_start program . tok_if_end
   28            | tok_if compare_anon_const tok_loop_start program . tok_else tok_loop_start program tok_if_end

    tok_else    shift, and go to state 77
    tok_if_end  shift, and go to state 78


state 66

   24 conditional: tok_if condition tok_loop_start program . tok_if_end
   25            | tok_if condition tok_loop_start program . tok_else tok_loop_start program tok_if_end

    tok_else    shift, and go to state 79
    tok_if_end  shift, and go to state 80


state 67

   39 expression: expression . tok_plus_print expression
   39           | expression tok_plus_print expression .
   40           | expression . tok_minus expression
   41           | expression . tok_multiply expression
   42           | expression . tok_divide expression

    tok_multiply  shift, and go to state 49
    tok_divide    shift, and go to state 50

    $default  reduce using rule 39 (expression)


state 68

   39 expression: expression . tok_plus_print expression
   40           | expression . tok_minus expression
   40           | expression tok_minus expression .
   41           | expression . tok_multiply expression
   42           | expression . tok_divide expression

    tok_multiply  shift, and go to state 49
    tok_divide    shift, and go to state 50

    $default  reduce using rule 40 (expression)


state 69

   39 expression: expression . tok_plus_print expression
   40           | expression . tok_minus expression
   41           | expression . tok_multiply expression
   41           | expression tok_multiply expression .
   42           | expression . tok_divide expression

    $default  reduce using rule 41 (expression)


state 70

   39 expression: expression . tok_plus_print expression
   40           | expression . tok_minus expression
   41           | expression . tok_multiply expression
   42           | expression . tok_divide expression
   42           | expression tok_divide expression .

    $default  reduce using rule 42 (expression)


state 71

   31 condition: expression tok_equal expression .
   39 expression: expression . tok_plus_print expression
   40           | expression . tok_minus expression
   41           | expression . tok_multiply expression
   42           | expression . tok_divide expression

    tok_plus_print  shift, and go to state 47
    tok_minus       shift, and go to state 48
    tok_multiply    shift, and go to state 49
    tok_divide      shift, and go to state 50

    $default  reduce using rule 31 (condition)


state 72

   32 condition: expression tok_less_than expression .
   39 expression: expression . tok_plus_print expression
   40           | expression . tok_minus expression
   41           | expression . tok_multiply expression
   42           | expression . tok_divide expression

    tok_plus_print  shift, and go to state 47
    tok_minus       shift, and go to state 48
    tok_multiply    shift, and go to state 49
    tok_divide      shift, and go to state 50

    $default  reduce using rule 32 (condition)


state 73

   33 condition: expression tok_greater_than expression .
   39 expression: expression . tok_plus_print expression
   40           | expression . tok_minus expression
   41           | expression . tok_multiply expression
   42           | expression . tok_divide expression

    tok_plus_print  shift, and go to state 47
    tok_minus       shift, and go to state 48
    tok_multiply    shift, and go to state 49
    tok_divide      shift, and go to state 50

    $default  reduce using rule 33 (condition)


state 74

   13 declaration: tok_var tok_integer tok_multiply tok_plus_print tok_multiply . tok_multiply

    tok_multiply  shift, and go to state 81


state 75

   23 loop: tok_for_start tok_in tok_range tok_int_literal tok_loop_start . program tok_loop_end

    tok_plus_print  shift, and go to state 1
    tok_multiply    shift, and go to state 2
    tok_var         shift, and go to state 3
    tok_for_start   shift, and go to state 4
    tok_if          shift, and go to state 5
    tok_if_end      shift, and go to state 6
    tok_identifier  shift, and go to state 7

    $default  reduce using rule 1 (program)

    program        go to state 82
    statement      go to state 9
    declaration    go to state 10
    assignment     go to state 11
    output         go to state 12
    loop           go to state 13
    conditional    go to state 14
    special_token  go to state 15


state 76

   26 conditional: tok_if compare_anon_vars tok_loop_start program tok_if_end .

    $default  reduce using rule 26 (conditional)


state 77

   28 conditional: tok_if compare_anon_const tok_loop_start program tok_else . tok_loop_start program tok_if_end

    tok_loop_start  shift, and go to state 83


state 78

   27 conditional: tok_if compare_anon_const tok_loop_start program tok_if_end .

    $default  reduce using rule 27 (conditional)


state 79

   25 conditional: tok_if condition tok_loop_start program tok_else . tok_loop_start program tok_if_end

    tok_loop_start  shift, and go to state 84


state 80

   24 conditional: tok_if condition tok_loop_start program tok_if_end .

    $default  reduce using rule 24 (conditional)


state 81

   13 declaration: tok_var tok_integer tok_multiply tok_plus_print tok_multiply tok_multiply .

    $default  reduce using rule 13 (declaration)


state 82

   23 loop: tok_for_start tok_in tok_range tok_int_literal tok_loop_start program . tok_loop_end

    tok_loop_end  shift, and go to state 85


state 83

   28 conditional: tok_if compare_anon_const tok_loop_start program tok_else tok_loop_start . program tok_if_end

    tok_plus_print  shift, and go to state 1
    tok_multiply    shift, and go to state 2
    tok_var         shift, and go to state 3
    tok_for_start   shift, and go to state 4
    tok_if          shift, and go to state 5
    tok_if_end      shift, and go to state 6
    tok_identifier  shift, and go to state 7

    tok_if_end  [reduce using rule 1 (program)]

    program        go to state 86
    statement      go to state 9
    declaration    go to state 10
    assignment     go to state 11
    output         go to state 12
    loop           go to state 13
    conditional    go to state 14
    special_token  go to state 15


state 84

   25 conditional: tok_if condition tok_loop_start program tok_else tok_loop_start . program tok_if_end

    tok_plus_print  shift, and go to state 1
    tok_multiply    shift, and go to state 2
    tok_var         shift, and go to state 3
    tok_for_start   shift, and go to state 4
    tok_if          shift, and go to state 5
    tok_if_end      shift, and go to state 6
    tok_identifier  shift, and go to state 7

    tok_if_end  [reduce using rule 1 (program)]

    program        go to state 87
    statement      go to state 9
    declaration    go to state 10
    assignment     go to state 11
    output         go to state 12
    loop           go to state 13
    conditional    go to state 14
    special_token  go to state 15


state 85

   23 loop: tok_for_start tok_in tok_range tok_int_literal tok_loop_start program tok_loop_end .

    $default  reduce using rule 23 (loop)


state 86

   28 conditional: tok_if compare_anon_const tok_loop_start program tok_else tok_loop_start program . tok_if_end

    tok_if_end  shift, and go to state 88


state 87

   25 conditional: tok_if condition tok_loop_start program tok_else tok_loop_start program . tok_if_end

    tok_if_end  shift, and go to state 89


state 88

   28 conditional: tok_if compare_anon_const tok_loop_start program tok_else tok_loop_start program tok_if_end .

    $default  reduce using rule 28 (conditional)


state 89

   25 conditional: tok_if condition tok_loop_start program tok_else tok_loop_start program tok_if_end .

    $default  reduce using rule 25 (conditional)
